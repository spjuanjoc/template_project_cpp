name: windows

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-2022]
        platform: [x64]
        build_type: [Release]
        standard: [20]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Conan Client
        uses: conan-io/setup-conan@v1
        with:
          cache_packages: true
          use_venv: true

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Run CMake Configure
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake -S ${GITHUB_WORKSPACE} \
                -A ${{matrix.platform}} \
                -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
                -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES="${GITHUB_WORKSPACE}/cmake/conan_provider.cmake" \
                -DENABLE_TESTS=True \
                -DENABLE_COVERAGE=False \
                -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=True \
                -DBUILD_SHARED_LIBS=True

      - name: CMake Build
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake --build . --config ${{matrix.build_type}}

      - name: Check symbols
        working-directory: ${{runner.workspace}}/build
        run: |
          ldd ${{runner.workspace}}/build/test/${{matrix.build_type}}/template_project_cpp_AllTests.exe
          ldd ${{runner.workspace}}/build/${{matrix.build_type}}/template_project_cpp.dll

      - name: Copy DLL
        shell: cmd
        working-directory: ${{runner.workspace}}/build
        run: copy ${{runner.workspace}}\build\${{matrix.build_type}}\*.dll ${{runner.workspace}}\build\test\${{matrix.build_type}}
#
#      - name: Run CTest
#        working-directory: ${{runner.workspace}}/build
#        run: ctest -VV -C ${{matrix.build_type}} --output-on-failure
