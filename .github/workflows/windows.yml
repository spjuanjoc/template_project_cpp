name: windows

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-2019]
        platform: [x64]
        build_type: [Release]
        standard: [20]

    steps:
      - uses: actions/checkout@v3

      - run: choco install -y conan --version 1.62.0 --params="'/AddToPath:1'"
      - name: Install and configure Conan
        shell: cmd
        run: |
          call refreshenv
          conan profile new default --detect
          conan profile update conf.tools.system.package_manager:mode=install default
          conan profile show default
          echo "%PATH%" >> %GITHUB_PATH%
          echo "PATH = %PATH%"

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Install third-party packages
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: conan install $GITHUB_WORKSPACE/conanfile.txt -s build_type=${{matrix.build_type}} --build missing

      - name: CMake Configure
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          echo "PATH: ${PATH}"
          cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
                -A ${{matrix.platform}} -DCMAKE_MODULE_PATH=%CD:\=/% \
                -DENABLE_TESTS=True -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=True \
                -DBUILD_SHARED_LIBS=True $GITHUB_WORKSPACE

      - name: CMake Build
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake --build . --config ${{matrix.build_type}}

      - name: Check symbols
        working-directory: ${{runner.workspace}}/build
        run: |
          ldd ${{runner.workspace}}/build/test/${{matrix.build_type}}/template_project_cpp_AllTests.exe
          ldd ${{runner.workspace}}/build/${{matrix.build_type}}/template_project_cpp.dll

      - name: Copy DLL
        shell: cmd
        working-directory: ${{runner.workspace}}/build
        run: copy ${{runner.workspace}}\build\${{matrix.build_type}}\*.dll ${{runner.workspace}}\build\test\${{matrix.build_type}}

      - name: Run CTest
        working-directory: ${{runner.workspace}}/build
        run: ctest -VV -C ${{matrix.build_type}} --output-on-failure
